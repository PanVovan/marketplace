// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: rating.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createRating = `-- name: CreateRating :exec
INSERT INTO rating(id, user_id, product_id, rate) VALUES (uuid_generate_v4(), '63c7948d-24da-4331-9769-ab890505f1bd', '0e1ac0c1-97f9-411e-9657-fabfee9bf65e', 5) RETURNING id
`

func (q *Queries) CreateRating(ctx context.Context) error {
	_, err := q.db.ExecContext(ctx, createRating)
	return err
}

const deleteRating = `-- name: DeleteRating :exec
DELETE FROM rating WHERE id = $1
`

func (q *Queries) DeleteRating(ctx context.Context, id uuid.UUID) error {
	_, err := q.db.ExecContext(ctx, deleteRating, id)
	return err
}

const getRatingByProductID = `-- name: GetRatingByProductID :one
SELECT AVG(rate) AS avg FROM rating WHERE product_id = $1
`

func (q *Queries) GetRatingByProductID(ctx context.Context, productID uuid.UUID) (string, error) {
	row := q.db.QueryRowContext(ctx, getRatingByProductID, productID)
	var avg string
	err := row.Scan(&avg)
	return avg, err
}
